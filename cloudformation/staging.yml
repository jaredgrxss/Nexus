AWSTemplateFormatVersion: '2010-09-09'
Description: Deploying nexus with autoscaling policies and cost-effective Fargate setup.

Resources:

  # Set up a VPC for networking
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Nexus-VPC
  
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAzs ""]
  
  SubnetB:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
  
  # Cluster information
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Nexus-Cluster
  
  # Define ecs tasks for reversion
  TaskDefinitionReversion:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ReversionTaskDefinition
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ContainerDefinition:
        - Name: ReversionContainer
          Image: amazon/nexus-image
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: Service
              Value: Reversion
          Essential: true

  # Spin up the reversion service using FARGATE
  ReversionService:
    Type: AWS::ECS:Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: ReversionService
      TaskDefinition: !Ref TaskDefinitionReversion 
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref SubnetA
            - !Ref SubnetB
          AssignPublicIp: ENABLED

  # Define ecs tasks for Data
  TaskDefinitionData:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: DataTaskDefinition
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ContainerDefinition:
        - Name: DataContainer
          Image: amazon/nexus-image
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: Service
              Value: Data
          Essential: true

  # Spin up the Data service using FARGATE
  DataService:
    Type: AWS::ECS:Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: DataService
      TaskDefinition: !Ref TaskDefinitionData
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref SubnetA
            - !Ref SubnetB
          AssignPublicIp: ENABLED

  # Need autoscaling target for reversion service
  ECSAutoScalingTargetReversion:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 2
      MinCapacity: 1
      ResourceId: !Sub service/${ECSCluster}/${ReversionService}
      RoleARN: !GetAtt ECSAutoScalingRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  # Need autoscaling target for Data service
  ECSAutoScalingTargetData:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 2
      MinCapacity: 1
      ResourceId: !Sub service/${ECSCluster}/${DataService}
      RoleARN: !GetAtt ECSAutoScalingRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
  
  # Set up auto scaling policy
  ECSAutoScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: NexusAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ECSAutoScalingTarget
      TargetTrackignScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 50
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
  
  # Set up auto scaling role for cluster
  ECSAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSAustoScalingPolicy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - ecs:UpdateService
                  - ecs:DescribeServices
                Resource: '*'
Outputs:
  ClusterName: 
    Value: !Ref ECSCluster
    Description: Name of the ECS Cluster
  
  ServiceNames:
    Value: 
      - !Ref ReversionService
      - !Ref DataService
    Description: Name of the ECS services
